<view:TextSettingsViewClass xmlns="http://www.w3.org/1999/xhtml"
                            xmlns:view="hip.view" xmlns:ui="js.ui" xmlns:js="js.core" xmlns:setting="hip.view.setting">

    <js:Content name="settings">
        <ul class="settings">
            <li>
                <a onclick="_selectSubContent(fontFamilyContent)">
                    <span class="label">
                        ${i18n.t('textSettings.fontFamily')}
                    </span>
                    <span class="value">
                        <img src="./font/{_getFontImageSrc(paragraphStyle.fontFamily)}"/>
                    </span>
                </a>
            </li>
            <li>
                <a onclick="_selectSubContent(fontSizeContent)">
                    <span class="label">
                        ${i18n.t('textSettings.fontSizeAndSettings')}
                    </span>
                    <span class="value">
                        {paragraphStyle.fontSize} pt
                    </span>
                </a>
            </li>
            <li>
                <a onclick="_selectSubContent(colorContent)">
                    <span class="label">
                        ${i18n.t('settings.fillColor')}
                    </span>
                    <span class="value" visible="{neq(color,'none')}">
                        <span class="meta">{color}</span>
                        <span class="color-bubble" backgroundColor="{color}"/>
                    </span>
                    <span class="value" visible="{eq(color, 'none')}">
                        ${i18n.t('settings.none')}
                    </span>
                </a>

            </li>
            <li>
                <a onclick="_selectSubContent(strokeColorContent)">
                    <span class="label">
                        ${i18n.t('settings.strokeColor')}
                    </span>
                    <span class="value" visible="{strokeWidth}">
                        <span class="meta">{strokeColor}</span>
                        <span class="color-bubble" backgroundColor="{strokeColor}"/>
                    </span>
                    <span class="value" visible="{not(strokeWidth)}">
                        ${i18n.t('settings.none')}
                    </span>
                </a>

            </li>
            <li>
                <ui:SelectionView items="{alignments}" class="alignments" tagName="ul"
                                  selectedItem="{paragraphStyle.textAlign}">
                    <js:Template name="item">
                        <li onclick="_selectAlignment(item)">
                            <i class="fa fa-align-${item}"/>
                        </li>
                    </js:Template>
                </ui:SelectionView>
                <a>
                    <span class="label">
                        ${i18n.t('textSettings.textAlignment')}
                    </span>
                </a>

            </li>
        </ul>
    </js:Content>
    <js:Content cid="fontFamilyContent">
        <js:Content name="headerInfo">
            <div class="font-family-options">
                <a class="btn-bold" enabled="{_supportsStyle(selectedFontFamily,'bold')}"
                   onclick="_selectFont(selectedFontFamily, 'bold', selected)"
                   selected="{isBold(paragraphStyle.fontFamily)}">
                    ${i18n.t('textSettings.bold')}
                </a>
                <a class="btn-italic" enabled="{_supportsStyle(selectedFontFamily,'italic')}"
                   onclick="_selectFont(selectedFontFamily, 'italic', selected)"
                   selected="{isItalic(paragraphStyle.fontFamily)}">
                    ${i18n.t('textSettings.italic')}
                </a>
            </div>
        </js:Content>
        <ui:SelectionView items="{fontFamilies}" class="settings font-list" tagName="ul"
                          keyPath="name"
                          selectedItem="{selectedFontFamily}">
            <js:Template name="item">
                <li>
                    <a onclick="_selectFont(item, 'regular')">
                        <view:LazyImage src="./font/${item.image}" scrollView="{placeholder}"/>
                    </a>
                </li>
            </js:Template>
        </ui:SelectionView>
    </js:Content>
    <js:Content cid="fontSizeContent">
        <div class="slider-label">
            ${i18n.t('textSettings.fontSize')}
            <strong>{paragraphStyle.fontSize} Pt</strong>
        </div>
        <div class="slider-wrapper">
            <ui:Slider min="5" max="160" step="1" oninput="_changeStyle('fontSize', value, true)"
                       onhandleUp="_changeStyle('fontSize', value, false)"
                       value="{paragraphStyle.fontSize}"/>
        </div>
        <div class="slider-label">
            ${i18n.t('textSettings.letterSpacing')}
            <strong>{format(paragraphStyle.letterSpacing)}</strong>
        </div>
        <div class="slider-wrapper">
            <ui:Slider min="-5" max="10" step="1" oninput="_changeStyle('letterSpacing', value, true)"
                       onhandleUp="_changeStyle('letterSpacing', value)"
                       value="{paragraphStyle.letterSpacing}"/>
        </div>
        <div class="slider-label">
            ${i18n.t('textSettings.lineHeight')}
            <strong>{format(paragraphStyle.lineHeight)}</strong>
        </div>
        <div class="slider-wrapper">
            <ui:Slider min="0.5" max="2" step="0.1" oninput="_changeStyle('lineHeight', value, true)"
                       onhandleUp="_changeStyle('lineHeight', value)"
                       value="{paragraphStyle.lineHeight}"/>
        </div>
    </js:Content>
    <setting:ColorSetting cid="colorContent" selectedColor="{color}"
                          showToggleColor="true"
                          enableColor="{neq(color,'none')}"
                          oncolorToggle="_toggleFill()"
                          oncolorSelect="_updateColor('color',event)"/>
    <setting:ColorSetting cid="strokeColorContent" selectedColor="{strokeColor}"
                          showToggleColor="true"
                          enableColor="{gt(strokeWidth, 0)}"
                          oncolorToggle="_toggleStroke()"
                          oncolorSelect="_updateColor('strokeColor', event)"/>

</view:TextSettingsViewClass>